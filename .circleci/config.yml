version: 2.1

jobs:
  build:
    docker:
      - image: cimg/go:1.20.11
    environment:
      TAG: 0.1.<< pipeline.number >>
      IMAGE: ggiunta/whoami
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Compile the application
          command: |
            cd app
            make build
      - run:
          name: Run tests
          command: |
            cd app
            make test
      - run:
          name: Lint the code
          command: |
            cd app
            make check
      - run:
          name: Build the image
          command: |
            cd app
            make image $(TAG)
      - deploy:
          name: Push image to repository
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push $IMAGE:$TAG

  deploy_infra:
    docker:
      - image: cimg/base:2022.04
    environment:
      TAG: 0.1.<< pipeline.number >>
      IMAGE: ggiunta/whoami
    steps:
      - checkout
      - run:
          name: Create .terraformrc file locally
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
      - run:
          name: Install Terraform cli
          command: |
            sudo apt update && sudo apt install gpg
            wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update
            sudo apt install terraform
      - run:
          name: Deploy the k8s cluster
          command: |
            cd terraform 
            terraform init
            terraform apply --auto-approve

  deploy_application:
    working_directory: ~/repo
    docker:
      - image: cimg/aws:2023.09
    environment:
      TAG: 0.1.<< pipeline.number >>
      IMAGE: ggiunta/whoami
    steps:
      - checkout
      - run:
          name: Connect to the cluster
          command: |
            aws eks --region eu-west-2 update-kubeconfig --name chillipharm
      - run:
          name: Deploy the application
          command: |
            cd kubernetes
            envsubst < deploy.yaml > app.yaml
            kubectl apply -f ns.yaml
            kubectl apply -f app.yaml
            kubectl apply -f service.yaml
      - run:
          name: Retrieve url and test the application
          command: |
            URL=$(kubectl -n app get service app -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            curl $URL
            RESPONSE_CODE=$(curl -s -o /dev/null -w "%{http_code}" $URL)
            if [ $RESPONSE_CODE -eq 200 ]; then
              echo "Deployment test succeeded."
            else
              echo "Deployment test failed. Received HTTP response code $response_code."
              exit 1
            fi

workflows:
  build-deploy:
    jobs:
      - build
      - deploy_infra:
          requires:
            - build
      - deploy_application:
          requires:
            - build
            - deploy_infra
